#pragma once

#include <stdlib.h>
#include <stdint.h>
#include <sys/time.h>

#define __u8 uint8_t
#define u8 __u8
#define __u32 uint32_t
#define u32 __u32

typedef unsigned long ul;
typedef unsigned long long ull;

#define CRNG_STATE_SIZE     16
#define CHACHA20_KEY_SIZE   32
#define CHACHA20_BLOCK_SIZE 64

struct crng_state {
    u32 state[CRNG_STATE_SIZE];
};

struct extraction_type {
	int size;
	int backtrack;
};

struct extraction {
	struct extraction_type et;
	char *data; 
};

struct extractions {
	int num_extractions;
	struct extraction *extractions;
    struct crng_state final_state;
};

static inline ull timeval_to_us(struct timeval *tv) {
    return (1e6 * tv->tv_sec) + tv->tv_usec;
}

static ul HZ = 100;

static inline void
jiffies_to_timeval(unsigned long jiffies, struct timeval *tv) {
    tv->tv_usec = (jiffies % HZ) * (1000000L / HZ);
    tv->tv_sec = jiffies / HZ;
}